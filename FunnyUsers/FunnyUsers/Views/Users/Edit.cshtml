@page

@using FunnyUsers.Models;
@model FunnyUsers.Models.ApplicationUser



@{ 
    
    //var roles = (List<FunnyUsers.Models.ApplicationUser>)ViewData["roles"];
}


<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
<fieldset>
    <legend>Movie</legend>



    <div class="editor-label">
        @Html.LabelFor(model => model.UserName)

    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.UserName)
        @Html.ValidationMessageFor(model => model.UserName)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Email)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Email)
        @Html.ValidationMessageFor(model => model.Email)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Department)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Department)
        @Html.ValidationMessageFor(model => model.Department)
    </div>

 

    @*
        @if (Model.Role.Any())
        {
            foreach (var role in Model.Role)
            {
                <h5 class="card-title">@role</h5>
            }
        }
        else
        {
            <h5>NO ROLES....</h5>
        }


            <!-- ROLES dropdown



            <div class="editor-label">
                @Html.LabelFor(model => model.Role)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Role)
                @Html.ValidationMessageFor(model => model.Role)
            </div>
            -->*@
    <p>
        <input type="submit" value="Save" />
    </p>
</fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>